name: Deploy to AWS Lightsail

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: ./gradlew build -x test

      - name: Get artifact name
        id: artifact
        run: |
          echo "JAR_FILE=$(ls build/libs/*.jar | grep -v plain)" >> $GITHUB_OUTPUT

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app"
          strip_components: 2

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app

            # Stop existing application
            echo "Stopping existing application..."
            if [ -f app.pid ]; then
              OLD_PID=$(cat app.pid)
              kill $OLD_PID 2>/dev/null || echo "Process $OLD_PID not found"
              rm app.pid
            fi

            # Kill any remaining Java processes (safety measure)
            pkill -f "java -jar.*gntc-youth-be" || echo "No running Java process found"

            # Wait for port to be released
            sleep 3

            # Load environment variables
            if [ -f .env ]; then
              export $(cat .env | grep -v '^#' | xargs)
            fi

            # Find JAR file
            JAR_FILE=$(ls -t *.jar | grep -v plain | head -1)
            echo "Starting application with JAR: $JAR_FILE"

            # Start application
            nohup java -jar \
              -Dspring.profiles.active=prod \
              $JAR_FILE > app.log 2>&1 &

            NEW_PID=$!
            echo $NEW_PID > app.pid

            echo "Application deployment initiated!"
            echo "New PID: $NEW_PID"

            # Wait and verify startup (increased timeout for Spring Boot)
            echo "Waiting for application to start (this may take 10-15 seconds)..."
            for i in {1..30}; do
              if ps -p $NEW_PID > /dev/null 2>&1; then
                if grep -q "Started GntcYouthBeApplication" app.log 2>/dev/null; then
                  echo "Application started successfully!"
                  exit 0
                fi
                echo "Startup in progress... ($i/30)"
                sleep 1
              else
                echo "ERROR: Application process died during startup"
                tail -30 app.log
                exit 1
              fi
            done

            echo "WARNING: Startup verification timed out, but process is still running"
            echo "Check logs with: tail -f /home/ubuntu/app/app.log"
            tail -20 app.log
