name: Deploy to AWS Lightsail

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: ./gradlew build -x test

      - name: Get artifact name
        id: artifact
        run: |
          echo "JAR_FILE=$(ls build/libs/*.jar | grep -v plain)" >> $GITHUB_OUTPUT

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app"
          strip_components: 2

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app

            # Load environment variables
            if [ -f .env ]; then
              export $(cat .env | grep -v '^#' | xargs)
            fi

            # Find and deploy JAR
            JAR_FILE=$(ls -t *.jar | grep -v plain | head -1)
            echo "Deploying: $JAR_FILE"

            # Simple restart: kill old, start new
            pkill -f "gntc-youth-be" || true
            sleep 2

            # Create a detached script that will survive SSH disconnect
            cat > start_app.sh << 'SCRIPT_EOF'
            #!/bin/bash
            cd /home/ubuntu/app
            if [ -f .env ]; then
              export $(cat .env | grep -v '^#' | xargs)
            fi
            JAR_FILE=$(ls -t *.jar | grep -v plain | head -1)
            nohup java -jar -Dspring.profiles.active=prod $JAR_FILE > app.log 2>&1 &
            echo $! > app.pid
            SCRIPT_EOF

            chmod +x start_app.sh

            # Run in background, completely detached from this SSH session
            nohup ./start_app.sh > /dev/null 2>&1 &

            sleep 3

            echo "Application deployment initiated"
            echo "Checking if process started..."

            if [ -f app.pid ]; then
              PID=$(cat app.pid)
              if ps -p $PID > /dev/null 2>&1; then
                echo "Success! Process is running with PID: $PID"
              else
                echo "Warning: PID file exists but process not found"
              fi
            else
              echo "Warning: PID file not created yet"
            fi

            echo "Check logs: tail -f /home/ubuntu/app/app.log"
